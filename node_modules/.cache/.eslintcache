[{"C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\index.js":"1","C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\App.js":"3","C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\modules\\Routs.js":"4","C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\modules\\Auth.js":"5"},{"size":477,"mtime":1642859036315,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1640333746112,"results":"8","hashOfConfig":"7"},{"size":6095,"mtime":1642866972510,"results":"9","hashOfConfig":"7"},{"size":436,"mtime":1642847665649,"results":"10","hashOfConfig":"7"},{"size":2920,"mtime":1642854357721,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uk22zk",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\index.js",[],"C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\App.js",["25","26","27","28","29","30","31","32","33","34","35"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  useEffect,\n  useState,\n} from 'react';\n\nfunction App() {\nconst [smth, setSmth] = useState(0);\n  const [animeForChapter, setAnimeForChapter] = useState('');\n  const [updateManga, setUpdateManga] = useState('');\n  const [lastChapter, setLastChapter] = useState('');\n  const [titleAnime, setTitleAnime] = useState([])\n  const [typeAnime, setTypeAnime] = useState([]);\n  const [dayAnime, setDayAnime] = useState([]);\n  const [picAnime, setPicAnime] = useState([]);\n  const [allArrs, setAllArrs] = useState([]);\n\n\n const getChapter = () => {\n\n  const mangaurl = ' https://api.mangadex.org/manga?title='+ animeForChapter;\n  fetch(mangaurl)\n  .then((response)=>response.json())\n  .then((data)=>{\n    const date = new Date();\n\n    for(let i=0; i<data.data.length; i++){\n          const id = data.data[i].id; \n          setUpdateManga(data.data[i].attributes.updatedAt);\n            const the_id = 'https://api.mangadex.org/manga/'+id + '/feed?order[chapter]=desc&limit=1';\n            fetch(the_id)\n              .then((response)=>response.json())\n              .then((datas)=>{\n                console.log(datas);\n          \n              for(let i=0; i<datas.data.length; i++){\n                  setLastChapter(datas.data[i].attributes.chapter)\n                }              \n              }).catch((err)=>{console.log(err)});\n      }\n\n  }).catch((err)=>{console.log(err)})\n};\n\n\nuseEffect(()=>{\n  animeMonth()\n},[titleAnime]);\n\n  const animeMonth =()=>{\n      //smth stupid for date\n      let yourDate = new Date()\n      const offset = yourDate.getTimezoneOffset();\n      yourDate = new Date(yourDate.getTime() - (offset*60*1000));\n      const date = yourDate.toISOString().split('T')[0];\n    \n      const monthAnimeUrl = 'https://api.jikan.moe/v3/search/anime?q=&status=airing&page=1';\n      fetch(monthAnimeUrl)\n      .then(res =>{ return res.json()})\n      .then(data => {\n\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];  \n        //looping through the data to get type, name, pic, and titles array\n        let arrTitle = [];  \n        let arrTypes = [];\n        let arrImgs = [];\n        let arrDays = [];\n        let dayName = '';\n        for(let i=0; i<data.results.length; i++){\n          \n          arrTitle.push(data.results[i].title);\n          arrTypes.push(data.results[i].type);\n          arrImgs.push(data.results[i].image_url);\n          const d = new Date(data.results[i].start_date);\n          dayName = days[d.getDay()];\n          arrDays.push(dayName);\n    \n        }\n    \n        setTitleAnime(arrTitle);\n        setTypeAnime(arrTypes);\n        setPicAnime(arrImgs);\n        setDayAnime(arrDays);\n    \n        const combineArrs = [];\n        titleAnime.map((value, i)=>{    \n        combineArrs.push([value, typeAnime[i], picAnime[i], dayAnime[i]])\n        });\n\n        setAllArrs(combineArrs)\n\n      }).catch((err)=>{console.log(err)})\n    \n  }\n  return (\n    <div className=\"App\">\n       <div className=\"auth\">\n       <ul>    \n          <li><a href='/register'> <button className='btn btn-primary'> Login </button></a> </li>\n          <li> <a href='/register'> <button className='btn btn-primary'> Register </button></a> </li>\n        </ul>\n       <h1 >serAnime</h1>\n      </div >\n      <div className='container' >\n       {/* <button className=\"history\" className='btn btn-primary'>Your History</button>*/}\n       <div className=\"chapterNum\">\n         <h5>Enter the name of the manga to see the last realesed chapter</h5>\n        <div className=\"btnChapter\">\n        <input type=\"text\" placeholder=\"name of the manga\"  \n            className=\"form-control\"  \n            onChange={(e)=>{setAnimeForChapter(e.target.value)}} />\n        <button className='btno' onClick={getChapter}>-></button>\n          </div> \n          <div className=\"appearsOnFetch\" >\n            <p><i className=\"fa fa-angle-double-right\" ></i>  The last update of the manga was on {updateManga}</p>\n            <p><i className=\"fa fa-angle-double-right\"></i>  Last chapter has been realesed of {animeForChapter} is {lastChapter}</p>\n          </div>\n        </div>\n     \n        <div className=\"same\">\n        <div className=\"form-outline form-white\">\n                  <input type=\"text\" placeholder=\"name of anime\"  className=\"form-control\"/>\n                  <input type=\"text\" placeholder=\"enter the chapter\"  className=\"form-control\"/>\n                </div>\n                <button className=\"history\" className='btn btn-primary'>Search</button>\n        </div>\n            \n\n        <div className=\"airingAnime\">\n          <h3> == Airing Anime This Month ==</h3>\n         \n          <ul className='whole'>\n              \n                  {\n                    allArrs.map((value, b)=>{\n                      return(\n                        <> \n                        <li className='inside'>\n                       \n                            <li className='outerImg'>\n                              <div className='killIt'>\n                                <div className='innerImg'>\n                                  <img src={value[2]} />\n                                </div>\n                              </div>\n                            </li>\n                          \n                          \n                            <div className='containli'>\n                  \n                              <li className='li'><a className='colorIt'>Name: </a> {value[0]}</li>\n                            <li className='li'> <a className='colorIt'>Type: </a>{value[1]} </li>\n                            <li className='li'>      <a className='colorIt'>released Day: </a> {value[3]} </li>\n                             \n                            </div>\n                  \n                    \n                       \n                        </li>\n                        \n                        </>\n                      );\n                    })\n                  }\n \n          </ul>\n              </div>\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\modules\\Routs.js",[],["36","37"],"C:\\Users\\HP\\Documents\\node_react_proj\\client\\src\\modules\\Auth.js",["38","39","40"],"import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport Axios from 'axios';\r\n\r\nimport Computer from './computer.jpeg';\r\n\r\nfunction Auth() {\r\n    \r\n    const [usernameReg, setUsernameReg] = useState('');\r\n    const [passwordReg, setPasswordReg] = useState('');\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const register= ()=>{\r\n        Axios.post('http://localhost:5000/reg',{      \r\n            username: usernameReg,\r\n            password: passwordReg\r\n        }).then(res=>{\r\n            console.log(res)\r\n        })\r\n    };\r\n\r\n    const login =() =>{\r\n        Axios.post('http://localhost:5000/login',{      \r\n            username: usernameReg,\r\n            password: passwordReg\r\n        }).then((response)=>{\r\n            if(response.data.message){\r\n                setLoginStatus(response.data.message)\r\n            }\r\n            else{\r\n                setLoginStatus(response.data[0].username)\r\n            }\r\n        })\r\n    };\r\n        return (\r\n \r\n            <div className=\"Auth\">\r\n                \r\n                <div className='contain'> \r\n              \r\n                    <div className='form2'>\r\n                        <div className=\"pic\">\r\n                            <img src={Computer} alt=\"\" className='picco'/>\r\n                        </div>\r\n                        <h1>Registration</h1>\r\n                        <label >username</label>\r\n                        <input className=\"form-control\" type=\"text\" \r\n                         placeholder='enter your username' onChange={(e)=>{setUsernameReg(e.target.value)}}/>\r\n                        <label >password</label>\r\n                        <input className=\"form-control\" type=\"text\"  \r\n                        placeholder='enter your password' onChange={(e)=>{setPasswordReg(e.target.value)}}/>\r\n                       <div> <a href='/'> <button onClick={register} className='btn btn-primary'> Register </button></a></div>\r\n                    </div>\r\n                   <div className='form1'>\r\n                        <h1>Login</h1>\r\n                   \r\n                        <input className=\"form-control\" type=\"text\" \r\n                        placeholder='enter your username' onChange={(e)=>{setUsername(e.target.value)}}/>\r\n             \r\n                        <input className=\"form-control\" type=\"text\" \r\n                        placeholder='enter your password' onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                        <a > <button className='btn btn-primary' onClick={login}> Login </button></a>\r\n                        <p>{loginStatus}</p>\r\n        </div>\r\n                </div>\r\n        \r\n            </div>\r\n    );\r\n\r\n}                                                                    \r\nexport default Auth;\r\n",{"ruleId":"41","severity":1,"message":"42","line":10,"column":8,"nodeType":"43","messageId":"44","endLine":10,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":10,"column":14,"nodeType":"43","messageId":"44","endLine":10,"endColumn":21},{"ruleId":"41","severity":1,"message":"46","line":27,"column":11,"nodeType":"43","messageId":"44","endLine":27,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":50,"column":3,"nodeType":"49","endLine":50,"endColumn":15,"suggestions":"50"},{"ruleId":"41","severity":1,"message":"46","line":57,"column":13,"nodeType":"43","messageId":"44","endLine":57,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":88,"column":34,"nodeType":"53","messageId":"54","endLine":88,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":127,"column":45,"nodeType":"57","messageId":"58","endLine":127,"endColumn":72},{"ruleId":"59","severity":1,"message":"60","line":145,"column":35,"nodeType":"61","endLine":145,"endColumn":57},{"ruleId":"62","severity":1,"message":"63","line":153,"column":50,"nodeType":"61","endLine":153,"endColumn":73},{"ruleId":"62","severity":1,"message":"63","line":154,"column":49,"nodeType":"61","endLine":154,"endColumn":72},{"ruleId":"62","severity":1,"message":"63","line":155,"column":54,"nodeType":"61","endLine":155,"endColumn":77},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"41","severity":1,"message":"68","line":15,"column":12,"nodeType":"43","messageId":"44","endLine":15,"endColumn":20},{"ruleId":"41","severity":1,"message":"69","line":16,"column":12,"nodeType":"43","messageId":"44","endLine":16,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":69,"column":25,"nodeType":"61","endLine":69,"endColumn":29},"no-unused-vars","'smth' is assigned a value but never used.","Identifier","unusedVar","'setSmth' is assigned a value but never used.","'date' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'animeMonth'. Either include it or remove the dependency array.","ArrayExpression",["70"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'username' is assigned a value but never used.","'password' is assigned a value but never used.",{"desc":"73","fix":"74"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [animeMonth, titleAnime]",{"range":"75","text":"76"},[1486,1498],"[animeMonth, titleAnime]"]